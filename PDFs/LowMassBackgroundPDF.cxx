/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// (Gaussian core + exponential tail)*sigmoid
// Souvik Das
// 8/1/2013

#include "Riostream.h" 

#include "LowMassBackgroundPDF.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(LowMassBackgroundPDF) 

 LowMassBackgroundPDF::LowMassBackgroundPDF(const char *name, const char *title, 
                        RooAbsReal& _x,
                        RooAbsReal& _p0,
                        RooAbsReal& _p1,
                        RooAbsReal& _p2,
                        RooAbsReal& _p3,
                        RooAbsReal& _p4) :
   RooAbsPdf(name,title), 
   x("x","x",this,_x),
   p0("p0","p0",this,_p0),
   p1("p1","p1",this,_p1),
   p2("p2","p2",this,_p2),
   p3("p3","p3",this,_p3),
   p4("p4","p4",this,_p4)
 { 
 } 


 LowMassBackgroundPDF::LowMassBackgroundPDF(const LowMassBackgroundPDF& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   p0("p0",this,other.p0),
   p1("p1",this,other.p1),
   p2("p2",this,other.p2),
   p3("p3",this,other.p3),
   p4("p4",this,other.p4)
 { 
 } 

Double_t LowMassBackgroundPDF::evaluate() const 
{
   Double_t std=(x-p0)/p1;
   Double_t result=0;
   
   if (std<p2)
   {
     result=exp(-0.5*pow(std, 2));
   }
   else
   {
     result=exp(p2*p2/2.-p2*std);
   }
   
   result=result/(1.+exp(-p3*(x-p4)));
   
   return result; 
} 



